*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.15 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% 0.006 285.885);
  --color-primary: oklch(45% 0.24 277.023);
  --color-primary-content: oklch(93% 0.034 272.788);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}

:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% 0.006 285.885);
  --color-primary: oklch(45% 0.24 277.023);
  --color-primary-content: oklch(93% 0.034 272.788);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

:root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
  color-scheme: dark;
  --color-base-100: oklch(25.33% 0.016 252.42);
  --color-base-200: oklch(23.26% 0.014 253.1);
  --color-base-300: oklch(21.15% 0.012 254.09);
  --color-base-content: oklch(97.807% 0.029 256.847);
  --color-primary: oklch(58% 0.233 277.117);
  --color-primary-content: oklch(96% 0.018 272.314);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

:root {
  --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
}

.tooltip {
  --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
}

:root,
[data-theme] {
  background-color: var(--root-bg, var(--color-base-100));
  color: var(--color-base-content);
}

*,
::after,
::backdrop,
::before,
::file-selector-button {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0 solid;
}

:host,
html {
  line-height: 1.5;
  font-family: var(
    --default-font-family,
    ui-sans-serif,
    system-ui,
    sans-serif,
    "Apple Color Emoji",
    "Segoe UI Emoji",
    "Segoe UI Symbol",
    "Noto Color Emoji"
  );
  webkit-tap-highlight-color: #0000;
}

body {
  line-height: inherit;
}

hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

a {
  color: inherit;
  webkit-text-decoration: inherit;
  text-decoration: inherit;
}

table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}

::file-selector-button,
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  letter-spacing: inherit;
  color: inherit;
  background: 0 0;
}

input:where(:not([type="button"], [type="reset"], [type="submit"])),
select,
textarea {
  border-width: 1px;
}

::file-selector-button,
button,
input:where([type="button"], [type="reset"], [type="submit"]) {
  -webkit-appearance: button;
     -moz-appearance: button;
          appearance: button;
}

:-moz-focusring {
  outline: auto;
}

:-moz-ui-invalid {
  box-shadow: none;
}

::-webkit-search-decoration {
  webkit-appearance: none;
}

menu,
ol,
ul {
  list-style: none;
}

textarea {
  resize: vertical;
}

::-moz-placeholder {
  opacity: 1;
  color: color-mix(in oklch, currentColor 50%, #0000);
}

::placeholder {
  opacity: 1;
  color: color-mix(in oklch, currentColor 50%, #0000);
}

audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
  display: block;
  vertical-align: middle;
}

img,
video {
  max-width: 100%;
  height: auto;
}

:where(
  :root:has(
      .modal-open,
      .modal[open],
      .modal:target,
      .modal-toggle:checked,
      .drawer:not(.drawer-open) > .drawer-toggle:checked
    )
) {
  scrollbar-gutter: stable;
  background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
  --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
}

@property --radialprogress {
  syntax: "<percentage>";

  inherits: true;

  initial-value: 0%;
}

:root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked ) {
  overflow: hidden;
}

:root {
  scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
}

.dropdown {
  position: relative;
  display: inline-block;
  position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
}

.dropdown > *:not(summary):focus {
  outline-style: none;
}

@media (forced-colors: active) {
  .dropdown > *:not(summary):focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.dropdown .dropdown-content {
  position: absolute;
}

.dropdown:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content {
  display: none;
  transform-origin: top;
  opacity: 0%;
  scale: 95%;
}

@starting-style {
  .dropdown[popover], .dropdown .dropdown-content {
    scale: 95%;
    opacity: 0;
  }
}

.dropdown[popover], .dropdown .dropdown-content {
  z-index: 999;
  animation: dropdown 0.2s;
  transition-property: opacity, scale, display;
  transition-behavior: allow-discrete;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.dropdown.dropdown-open [tabindex]:first-child, .dropdown:not(.dropdown-hover):focus [tabindex]:first-child, .dropdown:focus-within [tabindex]:first-child {
  pointer-events: none;
}

.dropdown.dropdown-open .dropdown-content, .dropdown:not(.dropdown-hover):focus .dropdown-content, .dropdown:focus-within .dropdown-content {
  opacity: 100%;
}

.dropdown.dropdown-hover:hover .dropdown-content {
  opacity: 100%;
  scale: 100%;
}

.dropdown:is(details) summary::-webkit-details-marker {
  display: none;
}

.dropdown.dropdown-open .dropdown-content, .dropdown:focus .dropdown-content, .dropdown:focus-within .dropdown-content {
  scale: 100%;
}

.dropdown:where([popover]) {
  background: #0000;
}

.dropdown[popover] {
  position: fixed;
  color: inherit;
}

@supports not (position-area: bottom) {
  .dropdown[popover] {
    margin: auto;
  }

  .dropdown[popover].dropdown-open:not(:popover-open) {
    display: none;
    transform-origin: top;
    opacity: 0%;
    scale: 95%;
  }

  .dropdown[popover]::backdrop {
    background-color: color-mix(in oklab, #000 30%, #0000);
  }
}

.dropdown[popover]:not(.dropdown-open, :popover-open) {
  display: none;
  transform-origin: top;
  opacity: 0%;
  scale: 95%;
}

.dropdown-start :where(.dropdown-content) {
  inset-inline-end: auto;
}

.dropdown-start.dropdown-left .dropdown-content {
  top: calc(0.25rem * 0);
  bottom: auto;
}

.dropdown-start.dropdown-right .dropdown-content {
  top: calc(0.25rem * 0);
  bottom: auto;
}

.dropdown-center :where(.dropdown-content) {
  inset-inline-end: calc(1/2 * 100%);
  translate: 50% 0;
}

.dropdown-center.dropdown-left .dropdown-content {
  top: auto;
  bottom: calc(1/2 * 100%);
  translate: 0 50%;
}

.dropdown-center.dropdown-right .dropdown-content {
  top: auto;
  bottom: calc(1/2 * 100%);
  translate: 0 50%;
}

.dropdown-end {
  --anchor-h: span-left;
}

.dropdown-end :where(.dropdown-content) {
  inset-inline-end: calc(0.25rem * 0);
}

.dropdown-end.dropdown-left {
  --anchor-h: left;
  --anchor-v: span-top;
}

.dropdown-end.dropdown-left .dropdown-content {
  top: auto;
  bottom: calc(0.25rem * 0);
}

.dropdown-end.dropdown-right {
  --anchor-h: right;
  --anchor-v: span-top;
}

.dropdown-end.dropdown-right .dropdown-content {
  top: auto;
  bottom: calc(0.25rem * 0);
}

.dropdown-left .dropdown-content {
  inset-inline-end: 100%;
  top: calc(0.25rem * 0);
  bottom: auto;
  transform-origin: right;
}

.dropdown-right .dropdown-content {
  inset-inline-start: 100%;
  top: calc(0.25rem * 0);
  bottom: auto;
  transform-origin: left;
}

.dropdown-bottom .dropdown-content {
  top: 100%;
  bottom: auto;
  transform-origin: top;
}

.dropdown-top .dropdown-content {
  top: auto;
  bottom: 100%;
  transform-origin: bottom;
}

@keyframes dropdown {
  0% {
    opacity: 0;
  }
}

.navbar {
  display: flex;
  width: 100%;
  align-items: center;
  padding: 0.5rem;
  min-height: 4rem;
}

.drawer {
  position: relative;
  display: grid;
  width: 100%;
  grid-auto-columns: max-content auto;
}

.drawer-content {
  grid-column-start: 2;
  grid-row-start: 1;
  min-width: calc(0.25rem * 0);
}

.drawer-side {
  pointer-events: none;
  visibility: hidden;
  position: fixed;
  inset-inline-start: calc(0.25rem * 0);
  top: calc(0.25rem * 0);
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-rows: repeat(1, minmax(0, 1fr));
  align-items: flex-start;
  justify-items: start;
  overflow-x: hidden;
  overflow-y: hidden;
  overscroll-behavior: contain;
  opacity: 0%;
  transition: opacity 0.2s ease-out 0.1s allow-discrete, visibility 0.3s ease-out 0.1s allow-discrete;
  height: 100vh;
  height: 100dvh;
}

.drawer-side > .drawer-overlay {
  position: sticky;
  top: calc(0.25rem * 0);
  cursor: pointer;
  place-self: stretch;
  background-color: oklch(0% 0 0 / 40%);
}

.drawer-side > * {
  grid-column-start: 1;
  grid-row-start: 1;
}

.drawer-side > *:not(.drawer-overlay) {
  will-change: transform;
  transition: translate 0.3s ease-out;
  translate: -100%;
}

[dir="rtl"] .drawer-side > *:not(.drawer-overlay) {
  translate: 100%;
}

.drawer-toggle {
  position: fixed;
  height: calc(0.25rem * 0);
  width: calc(0.25rem * 0);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0%;
}

.drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
  overflow-y: auto;
  opacity: 100%;
}

.drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}

.drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
  outline: 2px solid;
  outline-offset: 2px;
}

.drawer-end > .drawer-toggle ~ .drawer-content {
  grid-column-start: 1;
}

.drawer-end > .drawer-toggle ~ .drawer-side {
  grid-column-start: 2;
  justify-items: end;
}

.drawer-end > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 100%;
}

[dir="rtl"] .drawer-end > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: -100%;
}

.drawer-end > .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}

.drawer-open > .drawer-side {
  overflow-y: auto;
}

.drawer-open > .drawer-toggle {
  display: none;
}

.drawer-open > .drawer-toggle ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
  position: sticky;
  display: block;
  width: auto;
  overscroll-behavior: auto;
  opacity: 100%;
}

.drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
  cursor: default;
  background-color: transparent;
}

.drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}

[dir="rtl"] .drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}

.drawer-open > .drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
}

.tooltip {
  position: relative;
  display: inline-block;
  --tt-bg: var(--color-neutral);
  --tt-off: calc(100% + 0.5rem);
  --tt-tail: calc(100% + 1px + 0.25rem);
}

.tooltip > :where(.tooltip-content), .tooltip[data-tip]:before {
  position: absolute;
  max-width: 20rem;
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 2);
  padding-block: calc(0.25rem * 1);
  text-align: center;
  white-space: normal;
  color: var(--color-neutral-content);
  opacity: 0%;
  font-size: 0.875rem;
  line-height: 1.25em;
  transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
  background-color: var(--tt-bg);
  width: -moz-max-content;
  width: max-content;
  pointer-events: none;
  z-index: 1;
  --tw-content: attr(data-tip);
  content: var(--tw-content);
}

.tooltip:after {
  position: absolute;
  opacity: 0%;
  background-color: var(--tt-bg);
  transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
  content: "";
  pointer-events: none;
  width: 0.625rem;
  height: 0.25rem;
  display: block;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: -1px 0;
          mask-position: -1px 0;
  -webkit-mask-image: var(--mask-tooltip);
          mask-image: var(--mask-tooltip);
}

.tooltip.tooltip-open > .tooltip-content, .tooltip.tooltip-open[data-tip]:before, .tooltip.tooltip-open:after, .tooltip[data-tip]:hover > .tooltip-content, .tooltip[data-tip]:hover[data-tip]:before, .tooltip[data-tip]:hover:after, .tooltip:hover > .tooltip-content, .tooltip:hover[data-tip]:before, .tooltip:hover:after, .tooltip:has(:focus-visible) > .tooltip-content, .tooltip:has(:focus-visible)[data-tip]:before, .tooltip:has(:focus-visible):after {
  opacity: 100%;
  --tt-pos: 0rem;
  transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}

.tooltip > .tooltip-content, .tooltip[data-tip]:before, .tooltip-top > .tooltip-content, .tooltip-top[data-tip]:before {
  transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
  inset: auto auto var(--tt-off) 50%;
}

.tooltip:after, .tooltip-top:after {
  transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
  inset: auto auto var(--tt-tail) 50%;
}

.rating {
  position: relative;
  display: inline-flex;
  vertical-align: middle;
}

.rating input {
  border: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.rating :where(*) {
  animation: rating 0.25s ease-out;
  height: calc(0.25rem * 6);
  width: calc(0.25rem * 6);
  border-radius: 0;
  background-color: var(--color-base-content);
  opacity: 20%;
}

.rating :where(*):is(input) {
  cursor: pointer;
}

.rating .rating-hidden {
  width: calc(0.25rem * 2);
  background-color: transparent;
}

.rating input[type="radio"]:checked {
  background-image: none;
}

.rating *:checked, .rating *[aria-checked="true"], .rating *[aria-current="true"], .rating *:has(~ *:checked, ~ *[aria-checked="true"], ~ *[aria-current="true"]) {
  opacity: 100%;
}

.rating *:focus-visible {
  transition: scale 0.2s ease-out;
  scale: 1.1;
}

.rating *:active:focus {
  animation: none;
  scale: 1.1;
}

.rating.rating-xs :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 4);
  height: calc(0.25rem * 4);
}

.rating.rating-sm :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 5);
  height: calc(0.25rem * 5);
}

.rating.rating-md :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 6);
  height: calc(0.25rem * 6);
}

.rating.rating-lg :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 7);
  height: calc(0.25rem * 7);
}

.rating.rating-xl :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 8);
  height: calc(0.25rem * 8);
}

@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}

@keyframes radio {
  0% {
    padding: 5px;
  }

  50% {
    padding: 3px;
  }
}

.loading {
  pointer-events: none;
  display: inline-block;
  aspect-ratio: 1 / 1;
  width: calc(0.25rem * 6);
  background-color: currentColor;
  vertical-align: middle;
  -webkit-mask-size: 100%;
          mask-size: 100%;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
}

.loading-dots {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
}

.loading-md {
  width: calc(var(--size-selector, 0.25rem) * 6);
}

.indicator {
  position: relative;
  display: inline-flex;
  width: -moz-max-content;
  width: max-content;
}

.indicator :where(.indicator-item) {
  z-index: 1;
  position: absolute;
  white-space: nowrap;
  top: var(--inidicator-t, 0);
  bottom: var(--inidicator-b, auto);
  left: var(--inidicator-s, auto);
  right: var(--inidicator-e, 0);
  translate: var(--inidicator-x, 50%) var(--indicator-y, -50%);
}

@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}

.input {
  cursor: text;
  border: var(--border) solid #0000;
  display: inline-flex;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  gap: calc(0.25rem * 2);
  background-color: var(--color-base-100);
  padding-inline: calc(0.25rem * 3);
  vertical-align: middle;
  white-space: nowrap;
  width: clamp(3rem, 20rem, 100%);
  height: var(--size);
  font-size: 0.875rem;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  border-color: var(--input-color);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  --size: calc(var(--size-field, 0.25rem) * 10);
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
}

.input:where(input) {
  display: inline-block;
}

.input :where(input) {
  display: inline-block;
  height: 100%;
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: none;
}

.input :where(input):focus, .input :where(input):focus-within {
  outline-style: none;
}

@media (forced-colors: active) {
  .input :where(input):focus, .input :where(input):focus-within {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.input:focus, .input:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
  isolation: isolate;
}

.input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}

.input:has(> input[disabled])::-moz-placeholder, .input:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.input:has(> input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
  box-shadow: none;
}

.input:has(> input[disabled]) > input[disabled] {
  cursor: not-allowed;
}

.input::-webkit-date-and-time-value {
  text-align: inherit;
}

.input[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * -3);
}

.input[list]::-webkit-calendar-picker-indicator {
}

.alert {
  display: grid;
  align-items: center;
  gap: calc(0.25rem * 4);
  border-radius: var(--radius-box);
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 3);
  color: var(--color-base-content);
  background-color: var(--alert-color, var(--color-base-200));
  justify-content: start;
  justify-items: start;
  grid-auto-flow: column;
  grid-template-columns: auto minmax(auto, 1fr);
  text-align: start;
  border: var(--border) solid var(--color-base-200);
  font-size: 0.875rem;
  line-height: 1.25rem;
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
  box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
}

.alert.alert-outline {
  background-color: transparent;
  color: var(--alert-color);
  box-shadow: none;
  background-image: none;
}

.alert.alert-dash {
  background-color: transparent;
  color: var(--alert-color);
  border-style: dashed;
  box-shadow: none;
  background-image: none;
}

.alert.alert-soft {
  color: var(--alert-color, var(--color-base-content));
  background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
  border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
  box-shadow: none;
  background-image: none;
}

.alert-success {
  border-color: var(--color-success);
  color: var(--color-success-content);
  --alert-color: var(--color-success);
}

.alert-error {
  border-color: var(--color-error);
  color: var(--color-error-content);
  --alert-color: var(--color-error);
}

@keyframes skeleton {
  0% {
    background-position: 150%;
  }

  100% {
    background-position: -50%;
  }
}

@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }

  100% {
    scale: 1;
    opacity: 1;
  }
}

.checkbox {
  border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
  position: relative;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: var(--radius-selector);
  padding: calc(0.25rem * 1);
  vertical-align: middle;
  color: var(--color-base-content);
  box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
  transition: background-color 0.2s, box-shadow 0.2s;
  --size: calc(var(--size-selector, 0.25rem) * 6);
  width: var(--size);
  height: var(--size);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}

.checkbox:before {
  --tw-content: "";
  content: var(--tw-content);
  display: block;
  width: 100%;
  height: 100%;
  rotate: 45deg;
  background-color: currentColor;
  opacity: 0%;
  transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
  transition-delay: 0.1s;
  clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
  box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  font-size: 1rem;
  line-height: 0.75;
}

.checkbox:focus-visible {
  outline: 2px solid var(--input-color, currentColor);
  outline-offset: 2px;
}

.checkbox:checked, .checkbox[aria-checked="true"] {
  background-color: var(--input-color, #0000);
  box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
}

.checkbox:checked:before, .checkbox[aria-checked="true"]:before {
  clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
  opacity: 100%;
}

@media print {
  .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
    rotate: 0deg;
    background-color: transparent;
    --tw-content: "✔︎";
    clip-path: none;
  }
}

@media (forced-colors: active) {
  .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
    rotate: 0deg;
    background-color: transparent;
    --tw-content: "✔︎";
    clip-path: none;
  }
}

.checkbox:indeterminate:before {
  rotate: 0deg;
  opacity: 100%;
  translate: 0 -35%;
  clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
}

.checkbox:disabled {
  cursor: not-allowed;
  opacity: 20%;
}

.label {
  display: inline-flex;
  align-items: center;
  gap: calc(0.25rem * 1.5);
  white-space: nowrap;
  color: color-mix(in oklab, currentColor 60%, transparent);
}

.label:has(input) {
  cursor: pointer;
}

.input .label, .select .label {
  display: flex;
  height: calc(100% - 0.5rem);
  align-items: center;
  padding-inline: calc(0.25rem * 3);
  font-size: inherit;
}

.input .label:first-child, .select .label:first-child {
  margin-inline-start: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * 3);
  border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
}

.input .label:last-child, .select .label:last-child {
  margin-inline-start: calc(0.25rem * 3);
  margin-inline-end: calc(0.25rem * -3);
  border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
}

.collapse:not(td, tr, colgroup) {
  visibility: visible;
}

.collapse {
  position: relative;
  display: grid;
  overflow: hidden;
  border-radius: var(--rounded-box, 1rem);
  width: 100%;
  grid-template-rows: max-content 0fr;
  transition: grid-template-rows 0.2s;
}

.collapse > input:is([type="checkbox"], [type="radio"]) {
  grid-column-start: 1;
  grid-row-start: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0;
  z-index: 1;
  width: 100%;
  padding: 1rem;
  padding-inline-end: 3rem;
  min-height: 3.75rem;
  transition: background-color 0.2s ease-out;
}

.collapse:is([open], .collapse-open, :focus:not(.collapse-close)), .collapse:not(.collapse-close):has(> input:is([type="checkbox"], [type="radio"]):checked) {
  grid-template-rows: max-content 1fr;
}

.collapse:is([open], .collapse-open, :focus:not(.collapse-close)) > .collapse-content, .collapse:not(.collapse-close)
    > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
  visibility: visible;
  min-height: -moz-fit-content;
  min-height: fit-content;
}

.collapse:focus-visible, .collapse:has(.collapse-title, > input:is([type="checkbox"], [type="radio"])):focus-visible {
  outline-color: var(--color-base-content);
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

.collapse:not(.collapse-open, .collapse-close) > input[type="checkbox"],
    .collapse:not(.collapse-open, .collapse-close) > input[type="radio"]:not(:checked),
    .collapse:not(.collapse-open, .collapse-close) > .collapse-title {
  cursor: pointer;
}

.collapse:focus:not(.collapse-open, .collapse-close, .collapse[open]) > .collapse-title {
  cursor: unset;
}

.collapse:is([open], .collapse-open, :focus:not(.collapse-close)) > :where(.collapse-content), .collapse:not(.collapse-close)
    > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
  padding-bottom: 1rem;
  transition: padding 0.2s ease-out,
      background-color 0.2s ease-out;
}

.collapse:is([open], .collapse-open).collapse-arrow > .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}

.collapse.collapse-arrow:focus:not(.collapse-close) > .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}

.collapse.collapse-arrow:not(.collapse-close) > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}

.collapse[open].collapse-plus > .collapse-title:after {
  content: "−";
}

.collapse.collapse-open.collapse-plus > .collapse-title:after {
  content: "−";
}

.collapse.collapse-plus:focus:not(.collapse-close) > .collapse-title:after {
  content: "−";
}

.collapse.collapse-plus:not(.collapse-close) > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
  content: "−";
}

.collapse-title,
.collapse-content {
  grid-column-start: 1;
  grid-row-start: 1;
}

.collapse-content {
  visibility: hidden;
  grid-column-start: 1;
  grid-row-start: 2;
  min-height: 0;
  transition: visibility 0.2s;
  transition: padding 0.2s ease-out,
    background-color 0.2s ease-out;
  padding-left: 1rem;
  padding-right: 1rem;
  cursor: unset;
}

.collapse:is(details) {
  width: 100%;
}

.collapse:is(details) summary {
  position: relative;
  display: block;
}

.collapse:is(details) summary::-webkit-details-marker {
  display: none;
}

.collapse:is(details) summary {
  outline: none;
}

.collapse-arrow > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.5rem;
  width: 0.5rem;
  transform: translateY(-100%) rotate(45deg);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.2s;
  top: 1.9rem;
  inset-inline-end: 1.4rem;
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none;
}

.collapse-plus > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.5rem;
  width: 0.5rem;
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  top: 0.9rem;
  inset-inline-end: 1.4rem;
  content: "+";
  pointer-events: none;
}

.collapse-title {
  position: relative;
  width: 100%;
  padding: 1rem;
  padding-inline-end: 3rem;
  min-height: 3.75rem;
  transition: background-color 0.2s ease-out;
}

.status {
  display: inline-block;
  aspect-ratio: 1 / 1;
  width: calc(0.25rem * 2);
  height: calc(0.25rem * 2);
  border-radius: var(--radius-selector);
  background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  background-position: center;
  background-repeat: no-repeat;
  vertical-align: middle;
  color: color-mix(in oklab, var(--color-black) 30%, transparent);
  background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
  box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
}

.btn {
  display: inline-flex;
  flex-shrink: 0;
  cursor: pointer;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: center;
  gap: calc(0.25rem * 1.5);
  text-align: center;
  vertical-align: middle;
  text-decoration-line: none;
  outline-offset: 2px;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  padding-inline: var(--btn-p);
  color: var(--btn-fg);
  height: var(--size);
  font-size: 0.875rem;
  font-weight: 600;
  outline-color: var(--btn-color, var(--color-base-content));
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 0.2s;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  background-color: var(--btn-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--btn-noise);
  border-width: var(--border);
  border-style: solid;
  border-color: var(--btn-border);
  text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
  box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
  --size: calc(var(--size-field, 0.25rem) * 10);
  --btn-bg: var(--btn-color, var(--color-base-200));
  --btn-fg: var(--color-base-content);
  --btn-p: 1rem;
  --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
  --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
  --btn-noise: var(--fx-noise);
}

.btn:hover {
  --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
}

.btn.btn-active {
  --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
  isolation: isolate;
}

.btn:focus-visible {
  outline-width: 2px;
  outline-style: solid;
}

.btn:active:not(.btn-active) {
  translate: 0 0.5px;
  --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
  --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
}

.btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  box-shadow: none;
}

.btn:is(:disabled, [disabled], .btn-disabled) {
  pointer-events: none;
  --btn-border: #0000;
  --btn-noise: none;
  --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
}

.btn:is(:disabled, [disabled], .btn-disabled):hover {
  pointer-events: none;
  background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
  --btn-border: #0000;
  --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
}

.btn:is(input[type="checkbox"], input[type="radio"]) {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.btn:is(input[type="checkbox"], input[type="radio"])::after {
  content: attr(aria-label);
}

.btn:is(input[type="checkbox"], input[type="radio"]):checked {
  --btn-color: var(--color-primary);
  --btn-bg: var(--color-primary);
  --btn-fg: var(--color-primary-content);
  --btn-border: var(--color-primary);
}

.btn:is(input[type="checkbox"], input[type="radio"]):checked:focus-visible {
  outline-color: var(--color-primary);
}

.btn:is(input[type="checkbox"], input[type="radio"]):checked:hover {
  --btn-bg: color-mix(in oklab, var(--color-primary) 90%, #000);
  --btn-border: color-mix(in oklab, var(--color-primary) 90%, #000);
}

.btn-primary {
  --btn-color: var(--color-primary);
  --btn-fg: var(--color-primary-content);
}

.btn-neutral {
  --btn-color: var(--color-neutral);
  --btn-fg: var(--color-neutral-content);
}

.btn-error {
  --btn-color: var(--color-error);
  --btn-fg: var(--color-error-content);
}

.btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible) {
  --btn-shadow: "";
  --btn-bg: #0000;
  --btn-border: #0000;
  --btn-noise: none;
}

.btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible):not(:disabled, [disabled], .btn-disabled) {
  outline-color: currentColor;
  --btn-fg: currentColor;
}

.btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
  --btn-shadow: "";
  --btn-fg: var(--btn-color, var(--color-base-content));
  --btn-bg: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-content)) 8%,
      var(--color-base-100)
    );
  --btn-border: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-content)) 10%,
      var(--color-base-100)
    );
  --btn-noise: none;
}

.btn-sm {
  font-size: 0.75rem;
  --btn-p: 0.75rem;
  --size: calc(var(--size-field, 0.25rem) * 8);
}

.btn-square {
  padding-inline: calc(0.25rem * 0);
  width: var(--size);
  height: var(--size);
}

.btn-circle {
  border-radius: calc(infinity * 1px);
  padding-inline: calc(0.25rem * 0);
  width: var(--size);
  height: var(--size);
}

.link {
  cursor: pointer;
  text-decoration-line: underline;
}

.link:focus {
  outline-style: none;
}

@media (forced-colors: active) {
  .link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.link-primary {
  color: var(--color-primary);
}

.link-primary:hover {
  color: color-mix(in oklab, var(--color-primary) 80%, #000);
}

.table {
  font-size: 0.875rem;
  position: relative;
  width: 100%;
  border-radius: var(--radius-box);
  text-align: left;
}

.table:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
  text-align: right;
}

@media (hover: hover) {
  .table tr.row-hover:hover, .table tr.row-hover:nth-child(even):hover {
    background-color: var(--color-base-200);
  }
}

.table :where(th, td) {
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 3);
  vertical-align: middle;
}

.table :where(thead, tfoot) {
  white-space: nowrap;
  color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
  font-size: 0.875rem;
  font-weight: 600;
}

.table :where(tfoot) {
  border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
}

.table :where(.table-pin-rows thead tr) {
  position: sticky;
  top: calc(0.25rem * 0);
  z-index: 1;
  background-color: var(--color-base-100);
}

.table :where(.table-pin-rows tfoot tr) {
  position: sticky;
  bottom: calc(0.25rem * 0);
  z-index: 1;
  background-color: var(--color-base-100);
}

.table :where(.table-pin-cols tr th) {
  position: sticky;
  right: calc(0.25rem * 0);
  left: calc(0.25rem * 0);
  background-color: var(--color-base-100);
}

.table :where(thead tr, tbody tr:not(:last-child)) {
  border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
}

.table-zebra tbody tr:nth-child(even) {
  background-color: var(--color-base-200);
}

.table-zebra tbody tr:nth-child(even) :where(.table-pin-cols tr th) {
  background-color: var(--color-base-200);
}

@media (hover: hover) {
  .table-zebra tbody tr.row-hover:hover, .table-zebra tbody tr.row-hover:nth-child(even):hover {
    background-color: var(--color-base-300);
  }
}

.divider {
  display: flex;
  height: calc(0.25rem * 4);
  flex-direction: row;
  align-items: center;
  align-self: stretch;
  white-space: nowrap;
  margin: var(--divider-m, 1rem 0);
}

.divider:before, .divider:after {
  content: "";
  height: calc(0.25rem * 0.5);
  width: 100%;
  flex-grow: 1;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
}

@media print {
  .divider:before, .divider:after {
    border: 0.5px solid;
  }
}

.divider:not(:empty) {
  gap: calc(0.25rem * 4);
}

.divider-horizontal.divider {
  height: auto;
  width: calc(0.25rem * 4);
  flex-direction: column;
}

.divider-horizontal.divider:before {
  height: 100%;
  width: calc(0.25rem * 0.5);
}

.divider-horizontal.divider:after {
  height: 100%;
  width: calc(0.25rem * 0.5);
}

.divider-vertical.divider {
  height: calc(0.25rem * 4);
  width: auto;
  flex-direction: row;
}

.divider-vertical.divider:before {
  height: calc(0.25rem * 0.5);
  width: 100%;
}

.divider-vertical.divider:after {
  height: calc(0.25rem * 0.5);
  width: 100%;
}

.menu {
  display: flex;
  width: -moz-fit-content;
  width: fit-content;
  flex-direction: column;
  flex-wrap: wrap;
  padding: calc(0.25rem * 2);
  --menu-active-fg: var(--color-neutral-content);
  --menu-active-bg: var(--color-neutral);
  font-size: 0.875rem;
}

.menu :where(li ul) {
  position: relative;
  margin-inline-start: calc(0.25rem * 4);
  padding-inline-start: calc(0.25rem * 2);
  white-space: nowrap;
}

.menu :where(li ul):before {
  position: absolute;
  inset-inline-start: calc(0.25rem * 0);
  top: calc(0.25rem * 3);
  bottom: calc(0.25rem * 3);
  background-color: var(--color-base-content);
  opacity: 10%;
  width: var(--border);
  content: "";
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none;
}

.menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: calc(0.25rem * 2);
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 1.5);
  text-align: start;
  transition-property: color, background-color, box-shadow;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  text-wrap: balance;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.menu :where(li > details > summary) {
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where(li > details > summary) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where(li > details > summary)::-webkit-details-marker {
  display: none;
}

.menu :where(li > details > summary):after, .menu :where(li > .menu-dropdown-toggle):after {
  justify-self: flex-end;
  display: block;
  height: 0.375rem;
  width: 0.375rem;
  rotate: -135deg;
  translate: 0 -1px;
  transition-property: rotate, translate;
  transition-duration: 0.2s;
  content: "";
  transform-origin: 50% 50%;
  box-shadow: 2px 2px inset;
  pointer-events: none;
}

.menu :where(li > details[open] > summary):after, .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
  rotate: 45deg;
  translate: 0 1px;
}

.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
  cursor: pointer;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  color: var(--color-base-content);
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
  cursor: pointer;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
  box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
}

.menu :where(li:empty) {
  background-color: var(--color-base-content);
  opacity: 10%;
  margin: 0.5rem 1rem;
  height: 1px;
}

.menu :where(li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

.menu :where(li) .badge {
  justify-self: flex-end;
}

.menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
  color: var(--menu-active-fg);
  background-color: var(--menu-active-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}

.menu :where(li) > *:not(ul, .menu-title, details, .btn):active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn):active:active), .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:active), .menu :where(li) > details > summary:active:not(.menu :where(li) > details > summary:active:active) {
  box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
}

.menu :where(li).menu-disabled {
  pointer-events: none;
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.menu-horizontal {
  display: inline-flex;
  flex-direction: row;
}

.menu-horizontal > li:not(.menu-title) > details > ul {
  position: absolute;
  margin-inline-start: calc(0.25rem * 0);
  margin-top: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 2);
  padding-inline-end: calc(0.25rem * 2);
}

.menu-horizontal > li > details > ul:before {
  content: none;
}

:where(.menu-horizontal > li:not(.menu-title) > details > ul) {
  border-radius: var(--radius-box);
  background-color: var(--color-base-100);
  box-shadow: 0 1px 3px 0 oklch(0% 0 0/0.1), 0 1px 2px -1px oklch(0% 0 0/0.1);
}

.mockup-code {
  position: relative;
  overflow: hidden;
  overflow-x: auto;
  border-radius: var(--radius-box);
  background-color: var(--color-neutral);
  padding-block: calc(0.25rem * 5);
  color: var(--color-neutral-content);
  font-size: 0.875rem;
  direction: ltr;
}

.mockup-code:before {
  content: "";
  margin-bottom: calc(0.25rem * 4);
  display: block;
  height: calc(0.25rem * 3);
  width: calc(0.25rem * 3);
  border-radius: calc(infinity * 1px);
  opacity: 30%;
  box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
}

.mockup-code pre {
  padding-right: calc(0.25rem * 5);
}

.mockup-code pre:before {
  content: "";
  margin-right: 2ch;
}

.mockup-code pre[data-prefix]:before {
  content: attr(data-prefix);
  display: inline-block;
  width: calc(0.25rem * 8);
  text-align: right;
  opacity: 50%;
}

.mockup-window {
  position: relative;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  overflow-x: auto;
  border-radius: var(--radius-box);
  padding-top: calc(0.25rem * 5);
}

.mockup-window:before {
  content: "";
  margin-bottom: calc(0.25rem * 4);
  display: block;
  aspect-ratio: 1 / 1;
  height: calc(0.25rem * 3);
  flex-shrink: 0;
  align-self: flex-start;
  border-radius: calc(infinity * 1px);
  opacity: 30%;
  box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
}

[dir="rtl"] .mockup-window:before {
  align-self: flex-end;
}

.mockup-window pre[data-prefix]:before {
  content: attr(data-prefix);
  display: inline-block;
  text-align: right;
}

.mockup-browser .mockup-browser-toolbar .input {
  margin-inline: auto;
  display: flex;
  height: 100%;
  align-items: center;
  gap: calc(0.25rem * 2);
  overflow: hidden;
  background-color: var(--color-base-200);
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 0.75rem;
  direction: ltr;
}

.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  width: calc(0.25rem * 4);
  height: calc(0.25rem * 4);
  opacity: 30%;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' class='size-4'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E%0A");
}

.modal {
  pointer-events: none;
  visibility: hidden;
  position: fixed;
  inset: calc(0.25rem * 0);
  margin: calc(0.25rem * 0);
  display: grid;
  height: 100%;
  max-height: none;
  width: 100%;
  max-width: none;
  align-items: center;
  justify-items: center;
  background-color: transparent;
  padding: calc(0.25rem * 0);
  color: inherit;
  overflow-x: hidden;
  transition: transform 0.3s ease-out allow-discrete, visibility 0.3s ease-out allow-discrete, opacity 0.1s ease-out allow-discrete;
  overflow-y: hidden;
  overscroll-behavior: contain;
  z-index: 999;
}

.modal:not(dialog:not(.modal-open)), .modal::backdrop {
  opacity: 100%;
}

@starting-style {
  .modal:not(dialog:not(.modal-open)), .modal::backdrop {
    visibility: hidden;
    opacity: 0%;
  }
}

.modal:not(dialog:not(.modal-open)), .modal::backdrop {
  background-color: oklch(0% 0 0/ 0.4);
  transition: display 0.3s ease-out allow-discrete, opacity 0.3s ease-out allow-discrete, visibility 0.3s ease-out allow-discrete;
}

.modal.modal-open, .modal[open], .modal:target {
  pointer-events: auto;
  visibility: visible;
  opacity: 100%;
}

@starting-style {
  .modal.modal-open, .modal[open], .modal:target {
    visibility: hidden;
    opacity: 0%;
  }
}

.modal.modal-open .modal-box, .modal[open] .modal-box, .modal:target .modal-box {
  translate: 0 0;
  scale: 1;
  opacity: 1;
}

.modal-toggle:checked + .modal {
  pointer-events: auto;
  visibility: visible;
  opacity: 100%;
}

@starting-style {
  .modal-toggle:checked + .modal {
    visibility: hidden;
    opacity: 0%;
  }
}

.modal-toggle:checked + .modal .modal-box {
  translate: 0 0;
  scale: 1;
  opacity: 1;
}

.modal-box {
  grid-column-start: 1;
  grid-row-start: 1;
  max-height: 100vh;
  width: calc(11/12 * 100%);
  max-width: 32rem;
  background-color: var(--color-base-100);
  padding: calc(0.25rem * 6);
  transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;
  border-top-left-radius: var(--modal-tl, var(--radius-box));
  border-top-right-radius: var(--modal-tr, var(--radius-box));
  border-bottom-left-radius: var(--modal-bl, var(--radius-box));
  border-bottom-right-radius: var(--modal-br, var(--radius-box));
  scale: 95%;
  opacity: 0;
  box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;
  overflow-y: auto;
  overscroll-behavior: contain;
}

.modal-top :where(.modal-box) {
  height: auto;
  width: 100%;
  max-width: none;
  max-height: calc(100vh - 5em);
  translate: 0 -100%;
  scale: 1;
  --modal-tl: 0;
  --modal-tr: 0;
  --modal-bl: var(--radius-box);
  --modal-br: var(--radius-box);
}

.modal-middle :where(.modal-box) {
  height: auto;
  width: calc(11/12 * 100%);
  max-width: 32rem;
  max-height: calc(100vh - 5em);
  translate: 0 2%;
  scale: 98%;
  --modal-tl: var(--radius-box);
  --modal-tr: var(--radius-box);
  --modal-bl: var(--radius-box);
  --modal-br: var(--radius-box);
}

.modal-bottom :where(.modal-box) {
  height: auto;
  width: 100%;
  max-width: none;
  max-height: calc(100vh - 5em);
  translate: 0 100%;
  scale: 1;
  --modal-tl: var(--radius-box);
  --modal-tr: var(--radius-box);
  --modal-bl: 0;
  --modal-br: 0;
}

.modal-start :where(.modal-box) {
  height: 100vh;
  max-height: none;
  width: auto;
  max-width: none;
  translate: -100% 0;
  scale: 1;
  --modal-tl: 0;
  --modal-tr: var(--radius-box);
  --modal-bl: 0;
  --modal-br: var(--radius-box);
}

.modal-end :where(.modal-box) {
  height: 100vh;
  max-height: none;
  width: auto;
  max-width: none;
  translate: 100% 0;
  scale: 1;
  --modal-tl: var(--radius-box);
  --modal-tr: 0;
  --modal-bl: var(--radius-box);
  --modal-br: 0;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.invisible {
  visibility: hidden;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.inset-0 {
  inset: 0px;
}

.inset-x-0 {
  left: 0px;
  right: 0px;
}

.-top-40 {
  top: -10rem;
}

.left-\[calc\(50\%\+3rem\)\] {
  left: calc(50% + 3rem);
}

.left-\[calc\(50\%-11rem\)\] {
  left: calc(50% - 11rem);
}

.right-2 {
  right: 0.5rem;
}

.top-0 {
  top: 0px;
}

.top-2 {
  top: 0.5rem;
}

.top-\[calc\(100\%-13rem\)\] {
  top: calc(100% - 13rem);
}

.-z-10 {
  z-index: -10;
}

.-z-20 {
  z-index: -20;
}

.z-30 {
  z-index: 30;
}

.z-40 {
  z-index: 40;
}

.-m-1\.5 {
  margin: -0.375rem;
}

.m-1 {
  margin: 0.25rem;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-10 {
  margin-top: 2.5rem;
  margin-bottom: 2.5rem;
}

.my-20 {
  margin-top: 5rem;
  margin-bottom: 5rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mt-12 {
  margin-top: 3rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-8 {
  margin-top: 2rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.hidden {
  display: none;
}

.aspect-\[1155\/678\] {
  aspect-ratio: 1155/678;
}

.size-5 {
  width: 1.25rem;
  height: 1.25rem;
}

.size-6 {
  width: 1.5rem;
  height: 1.5rem;
}

.h-16 {
  height: 4rem;
}

.h-6 {
  height: 1.5rem;
}

.h-8 {
  height: 2rem;
}

.h-screen {
  height: 100vh;
}

.min-h-full {
  min-height: 100%;
}

.min-h-screen {
  min-height: 100vh;
}

.w-1\/3 {
  width: 33.333333%;
}

.w-52 {
  width: 13rem;
}

.w-6 {
  width: 1.5rem;
}

.w-80 {
  width: 20rem;
}

.w-\[36\.125rem\] {
  width: 36.125rem;
}

.w-auto {
  width: auto;
}

.w-full {
  width: 100%;
}

.max-w-2xl {
  max-width: 42rem;
}

.max-w-xs {
  max-width: 20rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-none {
  flex: none;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-\[30deg\] {
  --tw-rotate: 30deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-gpu {
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.list-inside {
  list-style-position: inside;
}

.list-disc {
  list-style-type: disc;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-0\.5 {
  gap: 0.125rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-x-6 {
  -moz-column-gap: 1.5rem;
       column-gap: 1.5rem;
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-balance {
  text-wrap: balance;
}

.text-pretty {
  text-wrap: pretty;
}

.break-all {
  word-break: break-all;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-box {
  border-radius: var(--radius-box);
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.border {
  border-width: 1px;
}

.border-b-4 {
  border-bottom-width: 4px;
}

.border-t {
  border-top-width: 1px;
}

.border-\[\#e5e5e5\] {
  --tw-border-opacity: 1;
  border-color: rgb(229 229 229 / var(--tw-border-opacity, 1));
}

.border-base-200 {
  border-color: var(--color-base-200);
}

.border-base-300 {
  border-color: var(--color-base-300);
}

.border-b-blue-600 {
  --tw-border-opacity: 1;
  border-bottom-color: rgb(37 99 235 / var(--tw-border-opacity, 1));
}

.bg-base-100 {
  background-color: var(--color-base-100);
}

.bg-base-200 {
  background-color: var(--color-base-200);
}

.bg-base-300 {
  background-color: var(--color-base-300);
}

.bg-blue-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(96 165 250 / var(--tw-bg-opacity, 1));
}

.bg-green-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(187 247 208 / var(--tw-bg-opacity, 1));
}

.bg-indigo-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(79 70 229 / var(--tw-bg-opacity, 1));
}

.bg-inherit {
  background-color: inherit;
}

.bg-transparent {
  background-color: transparent;
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.bg-gradient-to-tr {
  background-image: linear-gradient(to top right, var(--tw-gradient-stops));
}

.from-\[\#ff80b5\] {
  --tw-gradient-from: #ff80b5 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 128 181 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.to-\[\#9089fc\] {
  --tw-gradient-to: #9089fc var(--tw-gradient-to-position);
}

.fill-current {
  fill: currentColor;
}

.stroke-current {
  stroke: currentColor;
}

.p-1\.5 {
  padding: 0.375rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-3\.5 {
  padding-left: 0.875rem;
  padding-right: 0.875rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.py-16 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-2\.5 {
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
}

.py-32 {
  padding-top: 8rem;
  padding-bottom: 8rem;
}

.pl-3 {
  padding-left: 0.75rem;
}

.pr-2 {
  padding-right: 0.5rem;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

.font-mono {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.text-\[0\.5625rem\] {
  font-size: 0.5625rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-sm\/6 {
  font-size: 0.875rem;
  line-height: 1.5rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.font-bold {
  font-weight: 700;
}

.font-extrabold {
  font-weight: 800;
}

.font-light {
  font-weight: 300;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.italic {
  font-style: italic;
}

.leading-6 {
  line-height: 1.5rem;
}

.leading-\[1\.1\] {
  line-height: 1.1;
}

.tracking-tight {
  letter-spacing: -0.025em;
}

.tracking-wide {
  letter-spacing: 0.025em;
}

.text-base-content {
  color: var(--color-base-content);
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity, 1));
}

.text-blue-700 {
  --tw-text-opacity: 1;
  color: rgb(29 78 216 / var(--tw-text-opacity, 1));
}

.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity, 1));
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}

.text-gray-800 {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity, 1));
}

.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity, 1));
}

.text-indigo-600 {
  --tw-text-opacity: 1;
  color: rgb(79 70 229 / var(--tw-text-opacity, 1));
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.opacity-30 {
  opacity: 0.3;
}

.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.ring-1 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-gray-900\/10 {
  --tw-ring-color: rgb(17 24 39 / 0.1);
}

.blur-3xl {
  --tw-blur: blur(64px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-blur-sm {
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.transition-shadow {
  transition-property: box-shadow;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-100 {
  transition-duration: 100ms;
}

.rounded-box {
  border-radius: var(--radius-box);
}

.glass {
  border: none;
  -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
          backdrop-filter: blur(var(--glass-blur, 40px));
  background-color: #0000;
  background-image: linear-gradient(
      135deg,
      oklch(100% 0 0 / var(--glass-opacity, 30%)) 0%,
      oklch(0% 0 0 / 0%) 100%
    ),
    linear-gradient(
      var(--glass-reflect-degree, 100deg),
      oklch(100% 0 0 / var(--glass-reflect-opacity, 5%)) 25%,
      oklch(0% 0 0 / 0%) 25%
    );
  box-shadow: 0 0 0 1px oklch(100% 0 0 / var(--glass-border-opacity, 20%)) inset,
    0 0 0 2px oklch(0% 0 0 / 5%);
  text-shadow: 0 1px oklch(0% 0 0 / var(--glass-text-shadow-opacity, 5%));
}

.\[transform\:translate3d\(0\2c 0\2c 0\)\] {
  transform: translate3d(0,0,0);
}

@plugin "daisyui" {
  themes: all;
}

@media (min-width: 768px) {
  .md\:btn-md {
    font-size: 0.875rem;
    --btn-p: 1rem;
    --size: calc(var(--size-field, 0.25rem) * 10);
  }
}

@media (min-width: 1024px) {
  .lg\:drawer-open > .drawer-side {
    overflow-y: auto;
  }

  .lg\:drawer-open > .drawer-toggle {
    display: none;
  }

  .lg\:drawer-open > .drawer-toggle ~ .drawer-side {
    pointer-events: auto;
    visibility: visible;
    position: sticky;
    display: block;
    width: auto;
    overscroll-behavior: auto;
    opacity: 100%;
  }

  .lg\:drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
    cursor: default;
    background-color: transparent;
  }

  .lg\:drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
    translate: 0%;
  }

  [dir="rtl"] .lg\:drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
    translate: 0%;
  }

  .lg\:drawer-open > .drawer-toggle:checked ~ .drawer-side {
    pointer-events: auto;
    visibility: visible;
  }
}

.hover\:bg-indigo-500:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(99 102 241 / var(--tw-bg-opacity, 1));
}

.hover\:text-blue-950:hover {
  --tw-text-opacity: 1;
  color: rgb(23 37 84 / var(--tw-text-opacity, 1));
}

.hover\:text-indigo-500:hover {
  --tw-text-opacity: 1;
  color: rgb(99 102 241 / var(--tw-text-opacity, 1));
}

.hover\:ring-gray-900\/20:hover {
  --tw-ring-color: rgb(17 24 39 / 0.2);
}

.focus-visible\:outline:focus-visible {
  outline-style: solid;
}

.focus-visible\:outline-2:focus-visible {
  outline-width: 2px;
}

.focus-visible\:outline-offset-2:focus-visible {
  outline-offset: 2px;
}

.focus-visible\:outline-indigo-600:focus-visible {
  outline-color: #4f46e5;
}

@media (min-width: 640px) {
  .sm\:-top-80 {
    top: -20rem;
  }

  .sm\:left-\[calc\(50\%\+36rem\)\] {
    left: calc(50% + 36rem);
  }

  .sm\:left-\[calc\(50\%-30rem\)\] {
    left: calc(50% - 30rem);
  }

  .sm\:top-\[calc\(100\%-30rem\)\] {
    top: calc(100% - 30rem);
  }

  .sm\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }

  .sm\:mb-8 {
    margin-bottom: 2rem;
  }

  .sm\:flex {
    display: flex;
  }

  .sm\:w-\[72\.1875rem\] {
    width: 72.1875rem;
  }

  .sm\:w-full {
    width: 100%;
  }

  .sm\:max-w-sm {
    max-width: 24rem;
  }

  .sm\:justify-center {
    justify-content: center;
  }

  .sm\:p-2 {
    padding: 0.5rem;
  }

  .sm\:py-48 {
    padding-top: 12rem;
    padding-bottom: 12rem;
  }

  .sm\:text-7xl {
    font-size: 4.5rem;
    line-height: 1;
  }

  .sm\:text-xl\/8 {
    font-size: 1.25rem;
    line-height: 2rem;
  }
}

@media (min-width: 768px) {
  .md\:block {
    display: block;
  }

  .md\:h-8 {
    height: 2rem;
  }

  .md\:w-8 {
    width: 2rem;
  }
}

@media (min-width: 1024px) {
  .lg\:block {
    display: block;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:flex-1 {
    flex: 1 1 0%;
  }

  .lg\:gap-3 {
    gap: 0.75rem;
  }

  .lg\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .lg\:py-32 {
    padding-top: 8rem;
    padding-bottom: 8rem;
  }

  .lg\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
}

.rtl\:rotate-180:where([dir="rtl"], [dir="rtl"] *) {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media print {
  .print\:hidden {
    display: none;
  }
}